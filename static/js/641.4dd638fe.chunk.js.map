{"version":3,"file":"static/js/641.4dd638fe.chunk.js","mappings":"gUACA,EAAmC,oCAAnC,EAAmF,6BAAnF,EAAkI,mC,SCIrHA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,MAAOC,EACbF,EADaE,OAAQC,EACrBH,EADqBG,YAAaC,EAClCJ,EADkCI,SAAUC,EAC5CL,EAD4CK,aAAcC,EAC1DN,EAD0DM,aAQtDC,ECZwB,SAAAC,GAC9B,GAAIA,EACF,OAAOC,EAAAA,EAAAA,GAAO,IAAIC,KAAKF,GAAO,OAEjC,CDQqBG,CAAiBN,GAC/BO,EAN2B,SAAAC,GAC/B,IAAMC,EAAYC,OAAOF,GACzB,OAAOG,KAAKC,MAAmB,IAAZH,EAAmB,GACvC,CAG2BI,CAAyBZ,GAErD,OACE,iBAAKa,UAAWC,EAAhB,WACE,gBACEC,IACElB,EAAW,0CAC4BA,GAD5B,UAEJmB,GAETC,IAAKtB,EACLuB,MAAM,SAER,iBAAKL,UAAWC,EAAhB,WACE,kCAAQnB,EAAR,aAAkBM,EAAlB,QACA,6CAAmBK,EAAnB,QACA,wBAAI,cACJ,uBAAIR,KACJ,wBAAI,YACJ,eAAIe,UAAWC,EAAf,SACGlB,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,WAOrB,E,oBEzCD,GAAgB,UAAY,gCAAgC,cAAgB,oCAAoC,MAAQ,4BAA4B,YAAc,kCAAkC,gBAAkB,sCAAsC,gBAAkB,uCC2D9Q,EAnDqB,WAAO,IAAD,EAMzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,QAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,MAEtCC,GAA8B,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaK,UAAW,IAWjD,IATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBX,GACfY,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAASE,KAC3BhB,EAASe,EACV,IACAE,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAYD,EAAME,QAAtB,GACf,GAAE,CAACnB,IAEC9B,EAEL,OACE,iCACE,mBAAQmB,UAAWC,EAAAA,UAAe8B,KAAK,SAAvC,UACE,UAAC,KAAD,CAAM/B,UAAWC,EAAAA,cAAmB+B,GAAIb,EAAxC,WACE,SAAC,MAAD,KACA,iBAAMnB,UAAWC,EAAAA,cAAjB,SAAoC,kBAGxC,SAACrB,EAAD,CAAWC,MAAOA,KAClB,eAAImB,UAAWC,EAAAA,MAAf,SAA0B,4BAC1B,eAAID,UAAWC,EAAAA,YAAf,SAlCU,CACZ,CAAEgC,KAAM,OAAQnD,MAAO,QACvB,CAAEmD,KAAM,UAAWnD,MAAO,YAiCfwB,KAAI,gBAAG2B,EAAH,EAAGA,KAAMnD,EAAT,EAASA,MAAT,OACT,eAAIkB,UAAWC,EAAAA,gBAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,gBAAqB+B,GAAIC,EAA1C,SACGnD,KAFoCmD,EADhC,OAQb,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","services/format-date.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDescWrapper\":\"MovieInfo_movieDescWrapper__ixoI3\",\"movieInfo\":\"MovieInfo_movieInfo__LxIpr\",\"movieGenresList\":\"MovieInfo_movieGenresList__FuQ9l\"};","import PropTypes from 'prop-types';\nimport { formatDateToYear } from 'services/format-date';\nimport defaultPoster from './../../images/no-poster-available.jpg';\nimport css from './MovieInfo.module.css';\n\nexport const MovieInfo = ({ movie }) => {\n  const { title, genres, poster_path, overview, release_date, vote_average } =\n    movie;\n\n  const countUserScorePercentage = score => {\n    const userScore = Number(score);\n    return Math.round((userScore * 100) / 10);\n  };\n\n  const releaseYear = formatDateToYear(release_date);\n  const userScorePercentage = countUserScorePercentage(vote_average);\n\n  return (\n    <div className={css.movieDescWrapper}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : `${defaultPoster}`\n        }\n        alt={title}\n        width=\"300\"\n      />\n      <div className={css.movieInfo}>\n        <h1>{`${title} (${releaseYear})`}</h1>\n        <p>{`User score: ${userScorePercentage}%`}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul className={css.movieGenresList}>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }).isRequired\n    ).isRequired,\n    poster_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import format from 'date-fns/format';\n\nexport const formatDateToYear = date => {\n  if (date) {\n    return format(new Date(date), 'yyyy');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"goBackBtn\":\"MovieDetails_goBackBtn__WL+X0\",\"goBackBtnLink\":\"MovieDetails_goBackBtnLink__0ht2Q\",\"title\":\"MovieDetails_title__cUGs9\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\",\"detailsListItem\":\"MovieDetails_detailsListItem__Mu0Vp\",\"detailsListLink\":\"MovieDetails_detailsListLink__oqIf1\"};","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieDetails } from 'services/movie-api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { CgArrowLeft } from 'react-icons/cg';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const links = [\n    { path: 'cast', title: 'Cast' },\n    { path: 'reviews', title: 'Reviews' },\n  ];\n\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const locationRef = useRef(location?.state?.from);\n\n  const backLinkLocation = locationRef?.current || '/';\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(response => {\n        const movieInfo = response.data;\n        setMovie(movieInfo);\n      })\n      .catch(error => toast.error(error.message));\n  }, [movieId]);\n\n  if (!movie) return;\n\n  return (\n    <>\n      <button className={css.goBackBtn} type=\"button\">\n        <Link className={css.goBackBtnLink} to={backLinkLocation}>\n          <CgArrowLeft />\n          <span className={css.goBackBtnText}>Go back</span>\n        </Link>\n      </button>\n      <MovieInfo movie={movie} />\n      <h3 className={css.title}>Additional information</h3>\n      <ul className={css.detailsList}>\n        {links.map(({ path, title }) => (\n          <li className={css.detailsListItem} key={path}>\n            <Link className={css.detailsListLink} to={path}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieInfo","movie","title","genres","poster_path","overview","release_date","vote_average","releaseYear","date","format","Date","formatDateToYear","userScorePercentage","score","userScore","Number","Math","round","countUserScorePercentage","className","css","src","defaultPoster","alt","width","map","id","name","useState","setMovie","movieId","useParams","location","useLocation","locationRef","useRef","state","from","backLinkLocation","current","useEffect","fetchMovieDetails","then","response","movieInfo","data","catch","error","toast","message","type","to","path","Suspense","fallback","Loader"],"sourceRoot":""}